{"version":3,"sources":["lib/gasApi.js","lib/Lookup.js","lib/Field.js","lib/ViewRecord.js","lib/RecordList.js","lib/PolicyViewer.js","lib/AvailabilityViewer.js","lib/Viewer.js","App.js","serviceWorker.js","index.js"],"names":["gasHostname","process","Lookup","props","state","recordId","location","identity","recordIds","recordSeries","locations","identities","fetch","then","resp","json","setState","value","this","doLookup","params","includes","onLookup","className","defaultValue","onChange","event","updateIdentity","target","key","map","name","label","updateLocation","updateRecordId","series","Component","Field","val","size","format","DateTime","fromISO","toFormat","PureComponent","ViewRecord","reference","onRequestRecord","metadata","file","title","width","height","src","m","explanation","e","i","remedy","alternatives","onClick","record","description","legalStatus","copyright","foi","exemption","accessCondition","openingDate","renderExplanation","renderAlternatives","renderRemedy","pdfView","RecordList","index","available","downloadable","summary","downloadSize","records","renderElement","PolicyViewer","loc","locationNames","id","identityNames","rule","suppressedBy","isDefault","inheritedFrom","locId","text","showLabel","startsWith","replace","ruleSet","ruleCount","Object","keys","length","colStyle","entries","headerStyle","descStyle","renderRule","ruleSets","policies","renderRuleSet","identityName","renderRuleSets","policyCount","l","locationName","renderIdentity","listReference","metadataList","pC","ids","Set","values","forEach","policy","add","AvailabilityViewer","locationStyle","matrixStyle","matrix","allowed","filter","everyone","nobody","keyDates","beforeDateStr","beforeDate","minus","days","reloadAvailability","date","dateStr","identityStyle","renderLocation","renderKeyDates","availability","Viewer","error","allPolicies","fromEntries","loadRecord","path","extras","headers","reset","load","ok","loadList","loadPolicy","loadAvailability","oopsy","message","category","applicable","all","err","selectedClassName","App","viewRef","React","createRef","lookupRef","alt","href","ref","current","viewRecord","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0563d91.chunk.js","sourcesContent":["export const gasHostname = process.env.REACT_APP_GAS_HOSTNAME || \"http://localhost:3005\"\n","import React, { Component } from 'react'\nimport { gasHostname } from './gasApi'\n\nclass Lookup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recordId: '',\n      location: '',\n      identity: '',\n      recordIds: [],\n      recordSeries: [],\n      locations: [],\n      identities: []\n    }\n\n    fetch(`${gasHostname}/record-ids.json`)\n      .then(resp => resp.json())\n      .then(recordIds => this.setState({ recordIds: recordIds }))\n    fetch(`${gasHostname}/record-series.json`)\n      .then(resp => resp.json())\n      .then(recordSeries => this.setState({ recordSeries: recordSeries }))\n    fetch(`${gasHostname}/locations.json`)\n      .then(resp => resp.json())\n      .then(locations => this.setState({ locations: locations }))\n    fetch(`${gasHostname}/identities.json`)\n      .then(resp => resp.json())\n      .then(identities => this.setState({ identities: identities }))\n  } // constructor\n\n  updateRecordId(value) {\n    this.setState({recordId: value}, () => {\n      this.doLookup()\n    })\n  }\n\n  updateLocation(value) {\n    this.setState({location: value}, () => {\n      this.doLookup()\n    })\n  }\n\n  updateIdentity(value) {\n    this.setState({identity: value}, () => {\n      this.doLookup()\n    })\n  }\n\n  doLookup() {\n    const params = [this.state.recordId, this.state.location, this.state.identity]\n    if (params.includes('selectRecord') || params.includes(''))\n      return\n\n    this.props.onLookup(...params)\n  }\n\n  render() {\n    return (\n      <div className={`container-fluid ${this.props.className} lookup`}>\n        <div className='row'>\n          <select\n            defaultValue={this.state.identity}\n            className='col-4 custom-select'\n            onChange={event => this.updateIdentity(event.target.value)}>\n            <option key=\"selectRecord\" value=\"selectRecord\">Who?</option>\n            {\n              this.state.identities.map(([name, label]) => (\n                  <option key={name} value={name}>{label}</option>\n                )\n              )\n            }\n          </select>\n          <select\n            defaultValue={this.state.location}\n            className='col-4 custom-select'\n            onChange={event => this.updateLocation(event.target.value)}>\n            <option key=\"selectRecord\" value=\"selectRecord\">Where?</option>\n            {\n              this.state.locations.map(([name, label]) => (\n                  <option key={name} value={name}>{label}</option>\n                )\n              )\n            }\n          </select>\n          <select\n            value={this.state.recordId}\n            className='col-4 custom-select'\n            onChange={event => this.updateRecordId(event.target.value)}>\n            <option key=\"selectRecord\" value=\"selectRecord\">What?</option>\n            {\n              this.state.recordIds.map(recordId => (\n                  <option key={recordId} value={recordId}>{recordId}</option>\n                )\n              )\n            }\n            <option key=\"selectSeries\" value=\"selectSeries\">Choose a series</option>\n            {\n              this.state.recordSeries.map(series => (\n                  <option key={series} value={series}>{series}</option>\n                )\n              )\n            }\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Lookup\n","import React, { PureComponent } from 'react'\nimport { DateTime } from 'luxon'\n\nclass Field extends PureComponent {\n  get val() {\n    switch (this.props.format) {\n      case 'date':\n        return DateTime.fromISO(this.props.value).toFormat('MMMM d, yyyy')\n      default:\n        return this.props.value\n    }\n  }\n\n  render() {\n    if (!this.val)\n      return null\n    return (\n      <div className={`container-fluid ${this.props.className}`}>\n        <div className='row'>\n          {\n            this.props.label && <label className='col-md-2'>{this.props.label}</label>\n          }\n          <div className={`form-control ${this.props.size === 'small' ? 'col-md-4' : 'col-md'}`}>\n            {this.val}\n          </div>\n        </div>\n      </div>\n    )\n  } // render\n} // class Field\n\nexport default Field;\n","import React, { PureComponent } from 'react'\nimport Field from './Field'\n\nimport { gasHostname } from './gasApi'\n\nclass ViewRecord extends PureComponent {\n  onClick(reference) {\n    if (this.props.onRequestRecord)\n      this.props.onRequestRecord(reference)\n  }\n\n  pdfView() {\n    if (!this.props.metadata.file)\n      return\n\n    return (\n      <iframe className='h-100'\n              title='viewer'\n              width='100%'\n              height='100%'\n              src={`${gasHostname}/${this.props.recordId}/${this.props.metadata.file.name}`}\n      />\n    )\n  }\n\n  renderExplanation(m) {\n    if (!m.explanation)\n      return null\n\n    return (\n      <div>\n        <strong>This record is not available to view because</strong>\n        <ul>\n        { m.explanation.map((e, i) =>(<li key={i}>{e}</li>)) }\n       </ul>\n      </div>\n    )\n  }\n\n  renderRemedy(m) {\n    if (!m.remedy)\n      return null\n\n    return (\n      <div><strong>{m.remedy}</strong></div>\n    )\n  }\n\n  renderAlternatives(m) {\n    if (!m.alternatives)\n      return null\n\n    return (\n      <div>\n        <strong>Related Records</strong>\n        <ul>\n          { m.alternatives.map(({reference, title}) => (\n            <li key={reference}>\n              <button className=\"btn btn-link\" onClick={() => this.onClick(reference)}>{title}</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    if (!this.props.metadata)\n      return null\n\n    return (\n      <div className='container-fluid h-100'>\n        <div className='row'>\n          <div className='col'>\n            <Field label='Reference' value={this.props.metadata.reference}/>\n            <Field label='Title' value={this.props.metadata.record.title}/>\n            <Field label='Description' value={this.props.metadata.record.description}/>\n            <Field label='Status' value={this.props.metadata.record.legalStatus}/>\n            <Field label='Copyright' value={this.props.metadata.record.copyright}/>\n            <Field label='FOI' value={this.props.metadata.record.foi && this.props.metadata.record.foi.exemption}/>\n            <Field label='Access' value={this.props.metadata.record.accessCondition}/>\n            <Field label='Opening Date' value={this.props.metadata.record.openingDate} format='date'/>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='offset-2 col-10'>\n            { this.renderExplanation(this.props.metadata) }\n            { this.renderAlternatives(this.props.metadata) }\n            { this.renderRemedy(this.props.metadata) }\n          </div>\n        </div>\n        <div className='row h-100'>\n          <div className='col'>\n            { this.pdfView() }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ViewRecord\n","import React, { PureComponent } from 'react'\n\nconst Tick = '\\u2714'\nconst Cross = '\\u2718'\n\nclass RecordList extends PureComponent {\n  onClick(reference) {\n    if (this.props.onRequestRecord)\n      this.props.onRequestRecord(reference)\n  }\n\n  renderElement (e, index) {\n    const available = (e.file && e.file.name)\n    return (\n      <div className='row' key={index}>\n        <div className='col-3'><button className=\"btn btn-link\" onClick={() => this.onClick(e.reference)}>{e.reference}</button></div>\n        <div className='col-5'>{e.record.title}</div>\n        <div className={ available ? 'col-3 allow-access no-margin' : 'col-3 deny-access no-margin'}>\n          { available ? Tick : Cross }\n        </div>\n      </div>\n    )\n  }\n\n  renderExplanation(m) {\n    if (!m.explanation)\n      return null\n\n    return (\n      <div>\n        <strong>Bulk download is not available because</strong>\n        <ul>\n          { m.explanation.map((e, i) =>(<li key={i}>{e}</li>)) }\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    if (!this.props.metadata)\n      return null\n\n    const downloadable = (this.props.metadata.summary.downloadSize !== 0)\n    return ([\n      <div className='container-fluid' key='records'>\n        <div className='row'>\n          <div className='col-3'><strong>Reference</strong></div>\n          <div className='col-5'><strong>Title</strong></div>\n        </div>\n        { this.props.metadata.records.map((e, i) => this.renderElement(e, i)) }\n      </div>,\n      <div className='container-fluid' key='summary'>\n        <div className='row'><div className='col'><br/></div></div>\n        <div className='row'>\n          <div className='col-3'>\n            { this.props.metadata.summary.records } records <br/>\n            { this.props.metadata.summary.downloadable } files available to download<br/>\n          </div>\n          <div className={downloadable ? 'col-3 offset-5 allow-access no-margin' : 'col-8 no-margin'}>\n            { downloadable && Tick }\n            { this.renderExplanation(this.props.metadata.summary) }\n            <br/>\n          </div>\n        </div>\n      </div>\n    ])\n  }\n}\n\nexport default RecordList\n","import React, { PureComponent, Fragment } from 'react'\n\nclass PolicyViewer extends PureComponent {\n  get title() { try { return this.props.metadata.record.title } catch(e) { return this.listReference ? 'Series' : '' } }\n  get reference() { try { return this.props.metadata.reference } catch(e) { return this.listReference } }\n  get listReference() { try { return this.props.metadataList.summary.id } catch(e) { return null } }\n\n  get policies() { return this.props.policies }\n  get policyCount() {\n    let pC = 0\n    for (const l of this.locations)\n      for (const i of this.identities)\n        if (this.policies[l][i])\n          ++pC\n    return pC\n  }\n\n  get location() { return this.locationName(this.props.location) }\n  get identity() { return this.identityName(this.props.identity) }\n\n  get locations() { return Object.keys(this.policies) }\n  get identities() {\n    const ids = new Set()\n    Object.values(this.policies).forEach(\n      policy => Object.keys(policy).forEach(\n        name => ids.add(name)\n      )\n    )\n    return [...ids]\n  }\n\n  locationName(loc) { return this.props.locationNames[loc] }\n  identityName(id) { return this.props.identityNames[id] }\n\n  headerStyle(rule) {\n    const baseStyle = () => {\n      if (rule.suppressedBy) return 'suppressed'\n      if (rule.isDefault) return 'defrule'\n      return rule.inheritedFrom ? 'inherited' : 'own'\n    }\n    return `${baseStyle()} with-separator`\n  }\n  descStyle(rule) {\n    if (rule.suppressedBy) return 'suppressedDesc'\n    return 'desc'\n  }\n\n  renderRule(rule, location, identity) {\n    const locId = `${location}.${identity}`\n    const text = rule.text\n    const label = rule.inheritedFrom\n    const showLabel = label && !label.startsWith(locId) && !label.startsWith('web.everyone')\n    return (\n      <span>{text}<br/>\n        { showLabel && <small>{label.replace(/\\./g, ' ')}</small> }\n      </span>\n    )\n  }\n\n  renderRuleSet(ruleSet, location, identity) {\n    const ruleCount = Object.keys(ruleSet).length\n    const colWidth = (ruleCount <= 6) ? 'col-2': 'col'\n    const colStyle = `${colWidth} no-margin with-border`\n\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          {\n            Object.entries(ruleSet).map(([name, rule]) => (\n              <div className={colStyle}>\n                <div className={this.headerStyle(rule)} key={name}>\n                  <strong>{name}</strong>\n                </div>\n                <div className={this.descStyle(rule)} key={name}>\n                  {this.renderRule(rule, location, identity)}\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    )\n  }\n\n  renderRuleSets(location, identity) {\n    const ruleSets = this.policies[location][identity]\n    if (!ruleSets) return null\n\n    return ruleSets.map(ruleSet =>\n      this.renderRuleSet(ruleSet, location, identity)\n    )\n  }\n\n  renderIdentity(identity, location) {\n    if (!this.policies[location][identity])\n      return null\n\n    return (\n      <tr key={identity}>\n        <td><strong>{this.identityName(identity)}</strong></td>\n        <td>\n          { this.renderRuleSets(location, identity) }\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    if (!this.policies) return null\n\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-8'>\n            <strong>{this.reference}</strong> - {this.title}<br/>\n          </div>\n          { this.identity &&\n            <div className='col-4'>\n              For <strong>{this.identity}</strong>, <strong>{this.location}</strong>\n            </div>\n          }\n          { !this.identity &&\n            <div className='col-4'>\n              <strong>{this.policyCount} policies</strong>\n            </div>\n          }\n        </div>\n        <div className='row'>\n          <div className='col'>\n            <table>\n              <tbody>\n              {\n                this.locations.map(l => { return (\n                  <Fragment>\n                    <tr key={l}>\n                      <td/>\n                      <td><strong>{this.locationName(l)}</strong></td>\n                    </tr>\n                    { this.identities.map(i => this.renderIdentity(i, l)) }\n                  </Fragment>\n                )})\n              }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-5 offset-7'>\n            <br/><br/>\n            <table>\n              <thead><tr><td><strong>Key</strong></td></tr></thead>\n              <tbody>\n                <tr><td className='defrule'>Rule is inherited from the base policy</td></tr>\n                <tr><td className='inherited'>Rule is inherited from another policy</td></tr>\n                <tr><td className='own'>Rule modifies an inherited rule of the same name, or is a new rule added in this policy.</td></tr>\n                <tr><td className='suppressed'>Rule is suppressed by another rule in the policy. It is ignored during policy evaluation. </td></tr>\n              </tbody>\n            </table>\n            <ul>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PolicyViewer\n","import React, { PureComponent } from 'react'\nimport { DateTime } from 'luxon'\n\nconst Tick = '\\u2714'\nconst Cross = '\\u2718'\n\nclass AvailabilityViewer extends PureComponent {\n  get matrix() { return this.props.availability }\n  get title() { try { return this.props.metadata.record.title } catch(e) { return this.listReference ? 'Series' : '' } }\n  get reference() { try { return this.props.metadata.reference } catch(e) { return this.listReference } }\n  get listReference() { try { return this.props.metadataList.summary.id } catch(e) { return null } }\n  get keyDates() { return this.props.keyDates }\n\n  get locations() { return Object.keys(this.matrix) }\n  get identities() {\n    const ids = new Set()\n    Object.values(this.matrix).forEach(\n      loc => Object.keys(loc).forEach(\n        name => ids.add(name)\n      )\n    )\n    return [...ids]\n  }\n\n  locationName(loc) { return this.props.locationNames[loc] }\n  identityName(id) { return this.props.identityNames[id] }\n\n  renderLocation(location, identities) {\n    return (\n      <tr key={location}>\n        <td className={this.locationStyle(location)}><strong>{this.locationName(location)}</strong></td>\n        {\n          identities.map(identity => (\n            <td className={ this.matrixStyle(location, identity) } key={identity}>\n              { this.matrix[location][identity] ? Tick : Cross }\n            </td>\n          ))\n        }\n      </tr>\n    )\n  }\n\n  matrixStyle(location, identity) {\n    const m = this.matrix[location][identity]\n    if (m === 'partial')\n      return 'restricted-access'\n    return m ? 'allow-access' : 'deny-access'\n  }\n\n  locationStyle(location) {\n    const values = this.matrix[location]\n    const identities = this.identities\n    const allowed = identities.map(id => values[id] ? id : null).filter(id => id)\n    const everyone = allowed.length === identities.length\n    const nobody = allowed.length === 0\n\n    if (everyone)\n      return 'allow-access'\n    if (nobody)\n      return 'deny-access'\n    return 'partial-access'\n  }\n\n  identityStyle(identity) {\n    const values = this.matrix\n    const locations = this.locations\n    const allowed = locations.map(loc => values[loc][identity] ? loc : null).filter(loc => loc)\n    const everyone = allowed.length === locations.length\n    const nobody = allowed.length === 0\n\n    if (everyone)\n      return 'allow-access'\n    if (nobody)\n      return 'deny-access'\n    return 'partial-access'\n  }\n\n  renderKeyDates() {\n    if (!this.keyDates)\n      return\n\n    const beforeDateStr = 'Before ' + DateTime.fromISO(this.keyDates[0]).toFormat('MMMM d, yyyy')\n    const beforeDate = 'Before ' + DateTime.fromISO(this.keyDates[0]).minus({days: 1})\n\n    return (\n      <div className='container-fluid h-100'>\n        <div className='row'>\n          <div className='col-3'><strong>Key Dates</strong></div>\n          <div className='col'>\n            <div>\n              <button className='btn btn-link' onClick={() => this.props.reloadAvailability(beforeDate, beforeDateStr)}>{ beforeDateStr }</button>\n            </div>\n            {\n              this.keyDates.map((date, index) => {\n                const dateStr = DateTime.fromISO(date).toFormat('MMMM d, yyyy')\n                return (\n                  <div key={index}>\n                    <button className='btn btn-link' onClick={() => this.props.reloadAvailability(date, dateStr)}>{ dateStr }</button>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    if (!this.matrix) return null\n\n    const identities = this.identities\n\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col-8'>\n            <strong>{this.reference}</strong> - {this.title}<br/>\n          </div>\n          <div className='col-4'>\n            {this.props.date}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col'>\n            <table>\n              <thead>\n              <tr>\n                <td/>\n                { identities.map(i => (<th className={this.identityStyle(i)} key={i}>{this.identityName(i)}</th>))}\n              </tr>\n              {\n                this.locations.map(l => this.renderLocation(l, identities))\n              }\n              </thead>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col'>\n            {\n              this.renderKeyDates()\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AvailabilityViewer\n","import React, { Component } from 'react'\nimport ViewRecord from './ViewRecord'\nimport RecordList from './RecordList'\nimport PolicyViewer from './PolicyViewer'\nimport AvailabilityViewer from \"./AvailabilityViewer\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { gasHostname } from './gasApi'\n\nclass Viewer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recordId: '',\n      error: '',\n      metadata: null,\n      metadataList: null,\n      policy: null,\n      allPolicies: null,\n      availability: null,\n      date: null,\n      location: null,\n      identity: null\n    }\n\n    fetch(`${gasHostname}/locations.json`)\n      .then(resp => resp.json())\n      .then(locations => this.setState({ locationNames: Object.fromEntries(locations) }))\n    fetch(`${gasHostname}/identities.json`)\n      .then(resp => resp.json())\n      .then(identities => this.setState({ identityNames: Object.fromEntries(identities) }))\n\n  }\n\n  viewRecord(id, location, identity) {\n    this.setState({\n      recordId: id\n    })\n\n    this.loadRecord(id, location, identity)\n  }\n\n  async load(path, location, identity, extras = { }) {\n    const headers = {\n      'GA-Location': location,\n      'GA-Identity': identity\n    }\n    Object.entries(extras).forEach(([name, value]) => {\n       headers[`GA-${name}`] = value\n    })\n    return fetch(`${gasHostname}/${path}`, {\n      headers: headers\n    })\n  }\n\n  async loadRecord(id, location, identity) {\n    this.reset()\n    const resp = await this.load(`${id}/metadata.json`, location, identity)\n    if (!resp.ok)\n      return this.loadList(id, location, identity)\n\n    try {\n      const json = await resp.json()\n      this.setState({\n        metadata: json,\n        location: location,\n        identity: identity\n      })\n      this.loadPolicy(id, location, identity)\n      this.loadAvailability(id)\n    } catch (err) {\n      this.oopsy(err.message)\n    }\n  }\n\n  async loadList(id, location, identity) {\n    const resp = await this.load(`${id}/list.json`, location, identity)\n    if (!resp.ok)\n      return this.oopsy('No record found')\n\n    try {\n      const json = await resp.json()\n      this.setState({metadataList: json})\n      this.loadPolicy(id, location, identity, 'bulk')\n      this.loadAvailability(id, 'bulk')\n    } catch (err) {\n      this.oopsy(err.message)\n    }\n  }\n\n  async loadPolicy(id, location, identity, category = 'document') {\n    const resp = await this.load(`${id}/policy.json`, location, identity, { category })\n    if (!resp.ok)\n      return this.oopsy('No policy available')\n\n    try {\n      const json = await resp.json()\n      this.setState({\n        policy: json.applicable,\n        allPolicies: json.all\n      })\n    } catch (err) {\n      this.oopsy(err.message)\n    }\n  }\n\n  async loadAvailability(id, category = 'document', date = null) {\n    const resp = await this.load(`${id}/availability.json`,null, null,{\n      category,\n      date\n    })\n    if (!resp.ok)\n      return this.oopsy('No availability available')\n\n    try {\n      const json = await resp.json()\n      this.setState(json)\n    } catch (err) {\n      this.oopsy(err.message)\n    }\n  }\n\n  async reloadAvailability(date, dateStr) {\n    await this.loadAvailability(this.state.recordId, 'document', date)\n    this.setState({date: dateStr});\n  }\n\n  oopsy(err) {\n    this.setState({\n      error: `There was an error: ${err}`\n    })\n  }\n\n  reset() {\n    this.setState({\n      error: '',\n      metadata: null,\n      metadataList: null,\n      policy: null,\n      allPolicies: null,\n      location: null,\n      identity: null,\n      keyDates: null\n    })\n  }\n\n  render() {\n    return (\n      <Tabs className='h-100'>\n        <TabList>\n          <Tab>Record</Tab>\n          <Tab className='react-tabs__tab offset-7'>Applicable Policies</Tab>\n          <Tab>All Policies</Tab>\n          <Tab>Availability</Tab>\n        </TabList>\n        <TabPanel selectedClassName='react-tabs__tab-panel--selected h-100'>\n          <div className='container-fluid h-100'>\n            <div className='row'>\n              <div className='col'>{this.state.error}</div>\n            </div>\n            <ViewRecord\n              recordId={this.state.recordId}\n              metadata={this.state.metadata}\n              onRequestRecord={this.props.onRequestRecord}\n            />\n            <RecordList\n              metadata={this.state.metadataList}\n              onRequestRecord={this.props.onRequestRecord}\n            />\n          </div>\n        </TabPanel>\n        <TabPanel>\n          <PolicyViewer\n            policies={this.state.policy}\n            metadata={this.state.metadata}\n            metadataList = {this.state.metadataList}\n            locationNames={this.state.locationNames}\n            identityNames={this.state.identityNames}\n            location={this.state.location}\n            identity={this.state.identity}\n          />\n        </TabPanel>\n        <TabPanel>\n          <PolicyViewer\n            policies={this.state.allPolicies}\n            metadata={this.state.metadata}\n            metadataList = {this.state.metadataList}\n            locationNames={this.state.locationNames}\n            identityNames={this.state.identityNames}\n          />\n        </TabPanel>\n        <TabPanel>\n          <AvailabilityViewer\n            availability={this.state.availability}\n            date={this.state.date}\n            keyDates={this.state.keyDates}\n            metadata={this.state.metadata}\n            metadataList = {this.state.metadataList}\n            locationNames={this.state.locationNames}\n            identityNames={this.state.identityNames}\n            reloadAvailability={(date, dateStr) => this.reloadAvailability(date, dateStr)}\n          />\n        </TabPanel>\n      </Tabs>\n    )\n  }\n}\nexport default Viewer\n","import React from 'react';\nimport './bootstrap/css/bootstrap.css'\nimport './App.css';\nimport Lookup from './lib/Lookup'\nimport Viewer from './lib/Viewer'\nimport preval from 'preval.macro'\n\nconst buildTime = preval`module.exports = new Date().toUTCString()`\n\nfunction App() {\n  const viewRef = React.createRef()\n  const lookupRef = React.createRef()\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header container-fluid\">\n        <div className='row'>\n          <div className='col-1 text-left'>\n            <img src='tna.jpeg' width='75px' height='75px' alt='The National Archives'/>\n          </div>\n          <div className='col App-title text-left'><h1>Gradated Access Playpen</h1></div>\n          <div className='col-3 text-right'>\n            <small>Build time: {buildTime}</small><br/>\n            <small><a href='./docs.html'>About</a></small>\n          </div>\n        </div>\n        <div className='row'>\n          <Lookup\n            className='col-8 offset-2'\n            ref={lookupRef}\n            onLookup={(id, location, identity) => viewRef.current.viewRecord(id, location, identity)}/>\n        </div>\n      </div>\n      <div className=\"App-body\">\n        <Viewer\n          ref={viewRef}\n          onRequestRecord={id => lookupRef.current.updateRecordId(id)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}